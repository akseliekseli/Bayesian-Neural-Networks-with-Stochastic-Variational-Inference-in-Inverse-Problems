initial:
  initial:
    continuous:
      name: continuous_initial
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # add n_layers number of layers either gaussian or cauchy
          1:
            type: gaussian
            weight: 2.5
            bias: 0.5
            activation: tanh
          2:
            type: gaussian
            weight: 2.5
            bias: 0.5
            activation: tanh
          3:
            type: gaussian
            weight: 1.5
            bias: 0.1
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 30000
        random_seed: 42

    discrete:
      name: discrete_initial
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # add n_layers number of layers either gaussian or cauchy
          1:
            type: cauchy
            weight: 3.0
            bias: 2.0
            activation: tanh
          2:
            type: cauchy
            weight: 2.0
            bias: 2.0
            activation: tanh
          3:
            type: cauchy
            weight: 2.0
            bias: 2.0
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 10000
        random_seed: 42

continuous:
  sigma:
    sigma_002:
      name: continuous_sigma_002
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.02
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 5000
        random_seed: 42

    sigma_005:
      name: continuous_sigma_005
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.05
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 5000
        random_seed: 42

    sigma_01:
      name: continuous_sigma_01
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.1
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 5000
        random_seed: 42

  iterations:
    iterations_1000:
      name: continuous_iterations_1000
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 1000
        random_seed: 42

    iterations_2000:
      name: continuous_iterations_2000
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 2000
        random_seed: 42

    iterations_5000:
      name: continuous_iterations_5000
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 5000
        random_seed: 42

    iterations_10000:
      name: continuous_iterations_10000
      problem: continuous
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial continuous
          1:
            type: gaussian
            weight: 0.5
            bias: 0.5
            activation: relu
          2:
            type: gaussian
            weight: 0.01
            bias: 0.1
            activation: relu
          3:
            type: gaussian
            weight: 0.5
            bias: 0.01
            activation: tanh
      training_parameters:
        learning_rate: 0.01
        svi_num_iterations: 10000
        random_seed: 42

discrete:
  sigma:
    sigma_002:
      name: discrete_sigma_002
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.02
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 5000
        random_seed: 42

    sigma_005:
      name: discrete_sigma_005
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.05
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 5000
        random_seed: 42

    sigma_01:
      name: discrete_sigma_01
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.1
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 5000
        random_seed: 42

  iterations:
    iterations_1000:
      name: discrete_iterations_1000
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 1000
        random_seed: 42

    iterations_2000:
      name: discrete_iterations_2000
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 2000
        random_seed: 42

    iterations_5000:
      name: discrete_iterations_5000
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 5000
        random_seed: 42

    iterations_10000:
      name: discrete_iterations_10000
      problem: discrete
      n_t: 100
      n_y: 100
      domain: [-1, 1]
      sigma_noise: 0.01
      bnn:
        layers:    # same layers as the initial discrete
          1:
            type: gaussian
            weight: 0.5
            bias: 1.5
            activation: relu
          2:
            type: cauchy
            weight: 0.5
            bias: 1.5
            activation: relu
          3:
            type: cauchy
            weight: 0.01
            bias: 0.01
            activation: 
      training_parameters:
        learning_rate: 0.001
        svi_num_iterations: 10000
        random_seed: 42
